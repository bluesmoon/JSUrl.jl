var documenterSearchIndex = {"docs":
[{"location":"index.html#JSUrl.jl-Documentation","page":"JSUrl.jl Documentation","title":"JSUrl.jl Documentation","text":"","category":"section"},{"location":"index.html","page":"JSUrl.jl Documentation","title":"JSUrl.jl Documentation","text":"JSUrl","category":"page"},{"location":"index.html#JSUrl","page":"JSUrl.jl Documentation","title":"JSUrl","text":"Julia implementation of JSUrl. See the JSURL docs for more details on the format.\n\n\n\n\n\n","category":"module"},{"location":"index.html#Methods","page":"JSUrl.jl Documentation","title":"Methods","text":"","category":"section"},{"location":"index.html","page":"JSUrl.jl Documentation","title":"JSUrl.jl Documentation","text":"Modules=[JSUrl]\nOrder=[:function]","category":"page"},{"location":"index.html#JSUrl.encode-Tuple{AbstractChar}","page":"JSUrl.jl Documentation","title":"JSUrl.encode","text":"Encode a string type with JSUrl safe characters\n\n\n\n\n\n","category":"method"},{"location":"index.html#JSUrl.parse-Tuple{AbstractString}","page":"JSUrl.jl Documentation","title":"JSUrl.parse","text":"Parse a JSUrl serialized string into a Julia object.\n\nTo deserialize your own type, look for a Dict with a single string key matching your typename. The value will be the output of repr(::YourType)\n\n\n\n\n\n","category":"method"},{"location":"index.html#JSUrl.stringify-Tuple{Number}","page":"JSUrl.jl Documentation","title":"JSUrl.stringify","text":"Serialize a Julia object into a JSUrl string. This serialization is lossy as not all type information can be recovered.\n\nTo implement it for your own type, implement show(::YourType).\n\n\n\n\n\n","category":"method"},{"location":"index.html#Index","page":"JSUrl.jl Documentation","title":"Index","text":"","category":"section"},{"location":"index.html","page":"JSUrl.jl Documentation","title":"JSUrl.jl Documentation","text":"","category":"page"}]
}
